#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct node
{
int data;
struct node *next;
};
struct node *temp,*newnode,*top=NULL;
void push();
void pop();
void display();
void search();
void main()
{
int choice=0;
clrscr();
do
{
printf(" \n1.push\n2.pop\n3.search\n4.exit");
printf("\n enter the choice");
scanf("%d",&choice);
switch(choice)
{
case 1:
push();
display();
break;
case 2:
pop();
display();
break;
case 3:
search();
break;
case 4:
exit(0);
break;
}
}
while(choice!=4);
}
void push()
{
int a,n=1;
while(n)
{
printf("\n enter the data to be pushed \t");
scanf("%d",&a);
newnode=(struct node*)malloc(sizeof(struct node));
newnode->data=a;
newnode->next=top;
top=newnode;
printf("Do you want to continue(1/0)/n");
scanf("%d",&n);
}
}
void pop()
{
temp=top;
if(top==NULL)
{
printf("\n the stack is empty!\n");
}
else
{
printf("\n the poped element is %d\n",top->data);
top=top->next;
free(temp);
}
}
void display()
{
printf("\n the stack is:\t");
temp=top;
if(top==NULL)
{
printf("\n the list is empty!");
}
else
{
while(temp!=NULL)
{
printf("%d\t",temp->data);
temp=temp->next;
}
}
}
void search()
{
int item,i=0,flag=0;
printf("\n enter the element to search");
scanf("%d",&item);
temp=top;
while(temp!=NULL)
{
if(temp->data==item)
{
i=i+1;
printf("\n item %d found at %d position",temp->data,i);
flag=flag+1;
}
i=i+1;
temp=temp->next;
}
if(flag==0)
{
printf("\n not found");
}
}

